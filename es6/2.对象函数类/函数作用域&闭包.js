/**
 *
 * 函数作用域：函数执行之后会生成一个函数作用域，函数作用域中的变量在函数执行完之后会被销毁；
 * 闭包：函数里面的函数引用了这个外部函数的变量，在内部函数执行的时候，外部函数已经执行了，因为函数执行会生成一个函数作用域，所以里面函数执行的时候访问的是外部函数作用域中的值；
 * 这个外部函数通过作用域链访问全局作用域；
 * 在内存中就是存储在一个堆结构的数据中；
 * 
 */
function aa() {
    let a = 10;
    function b() {
        console.log(a);
        function c() {
            console.log(a);
        }
        return c;
    }
    return b;
}
let bb = aa();
let cc = bb();
cc();
