1.整理navy项目知识 ❕

1.1react 源码大致了解

2.微前端学习

​	1.了解基本使用 ✅
​	2.了解原理 ✅
​	3.模仿搭建navy微前端

4.组件库

​	1.熟悉业务组件库的搭建 ✅
​	2.熟悉发包等等的流程和内容 ✅
​	3.能说出来 

5.业务组件库

​	能说出来 ✅

6.vue diff

​	http://www.javascriptpeixun.cn/course/2711/task/160595/show

7.ts

​	1.再学习一遍
​	2.ts+react全家桶

8.webpack

​	1.基本原理和流程 ✅
​	2.配置优化
​	3.vite

9.	promise
​			promise原理 ✅
​			异步的callback，事件机制 ✅
​			generator，async ✅

10.proxy&reflect ✅
11.set，map ✅
12.class
11.react全家桶
​	1.react源码基本学习
​	2.react-redux源码学习
​	3.react-hooks源码学习
12.nodejs相关学习
​	1.了解基本原理
​	2.了解开发流程
​	3.bff相关知识
13.http相关问题
​	1.cdn ✅
​	2.nginx
​	3.https ✅
14.浏览器工作原理相关
​	1.

15.leetcode学习
​	1.刷10道题 ✅
​			10/10
​	2.刷30道题
​			10/30
​	3.刷50道题
​	4.刷100道题
​	5.刷150道题

16.ci/cd相关内容学习准备

17.svg

面试

1. 修改
   1. 修改内容
   2. 上传到网站
2. 基础知识点总结
   1. 自己onenote知识点
   2. 到掘金等上面再看看，总结下
3. 项目经验总结梳理
   1. 梳理拼音项目
   2. 梳理node-pdf项目



1.完成两章阅读
3.梳理分享内容
4.学习diff算法
5.整理必问的问题
6.整理拼音知识
7.整理面试二面内容



predict（1个月，指定一个1个月计划，这样能从更加有效的角度完成整体技术提升）：
​	2.vue了解最核心的实现原理（1天）
​	3.react 了解组件库的原理，了解通信机制（2天）
​	4.浏览器相关技术：（1天）
​		4.1浏览器加载优化



知识：

​	1.需要深度，充足学习的：
​		1.整体性的知识
​		2.反思优化提升的知识
​	2.快速准备就可以学习的：


难点：
1.将项目改成node-pdf部署，并且自己写脚本部署；